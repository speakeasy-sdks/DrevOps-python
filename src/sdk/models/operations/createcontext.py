"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Any, Optional

class CreateContextRequestBodyOwner2Type(str, Enum):
    r"""The type of owner. Defaults to \\"organization\\". Accounts are only used as context owners in server and must be specified by an id instead of a slug."""
    ORGANIZATION = 'organization'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateContextRequestBodyOwner2:
    slug: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slug') }})
    r"""A string that represents an organization. Specify either this or id. Cannot be used for accounts."""
    type: Optional[CreateContextRequestBodyOwner2Type] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of owner. Defaults to \\"organization\\". Accounts are only used as context owners in server and must be specified by an id instead of a slug."""
    


class CreateContextRequestBodyOwner1Type(str, Enum):
    r"""The type of the owner. Defaults to \\"organization\\". Accounts are only used as context owners in server."""
    ACCOUNT = 'account'
    ORGANIZATION = 'organization'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateContextRequestBodyOwner1:
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The unique ID of the owner of the context. Specify either this or slug."""
    type: Optional[CreateContextRequestBodyOwner1Type] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the owner. Defaults to \\"organization\\". Accounts are only used as context owners in server."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateContextRequestBody:
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The user defined name of the context."""
    owner: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateContextDefaultApplicationJSON:
    r"""Error response."""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateContextContext:
    r"""The new context"""
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The date and time the context was created."""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The unique ID of the context."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The user defined name of the context."""
    




@dataclasses.dataclass
class CreateContextResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    context: Optional[CreateContextContext] = dataclasses.field(default=None)
    r"""The new context"""
    create_context_default_application_json_object: Optional[CreateContextDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error response."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

