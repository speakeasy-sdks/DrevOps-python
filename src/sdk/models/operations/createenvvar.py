"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateEnvVarEnvironmentVariablePair:
    r"""The environment variable."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the environment variable."""
    value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""The value of the environment variable."""
    




@dataclasses.dataclass
class CreateEnvVarRequest:
    project_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project-slug', 'style': 'simple', 'explode': False }})
    r"""Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped."""
    request_body: Optional[CreateEnvVarEnvironmentVariablePair] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateEnvVarDefaultApplicationJSON:
    r"""Error response."""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    




@dataclasses.dataclass
class CreateEnvVarResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    create_env_var_default_application_json_object: Optional[CreateEnvVarDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error response."""
    environment_variable_pair: Optional[CreateEnvVarEnvironmentVariablePair] = dataclasses.field(default=None)
    r"""The environment variable."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

