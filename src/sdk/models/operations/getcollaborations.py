"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetCollaborationsDefaultApplicationJSON:
    r"""Error response."""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class GetCollaborationsCollaboration:
    avatar_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avatar_url') }})
    r"""URL to the user's avatar on the VCS"""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The UUID of the organization"""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the organization"""
    slug: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slug') }})
    r"""The slug of the organization"""
    vcs_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vcs-type') }})
    r"""The VCS provider"""
    




@dataclasses.dataclass
class GetCollaborationsResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    collaborations: Optional[list[GetCollaborationsCollaboration]] = dataclasses.field(default=None)
    r"""Collaborations"""
    get_collaborations_default_application_json_object: Optional[GetCollaborationsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error response."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

