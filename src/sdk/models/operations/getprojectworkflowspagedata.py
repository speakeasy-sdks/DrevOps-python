"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class GetProjectWorkflowsPageDataReportingWindowEnum(str, Enum):
    r"""The time window used to calculate summary metrics."""
    LAST_7_DAYS = 'last-7-days'
    LAST_90_DAYS = 'last-90-days'
    LAST_24_HOURS = 'last-24-hours'
    LAST_30_DAYS = 'last-30-days'
    LAST_60_DAYS = 'last-60-days'


@dataclasses.dataclass
class GetProjectWorkflowsPageDataRequest:
    
    project_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project-slug', 'style': 'simple', 'explode': False }})
    r"""Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped."""
    branches: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'branches', 'style': 'form', 'explode': True }})
    r"""The names of VCS branches to include in branch-level workflow metrics."""
    reporting_window: Optional[GetProjectWorkflowsPageDataReportingWindowEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'reporting-window', 'style': 'form', 'explode': True }})
    r"""The time window used to calculate summary metrics."""
    workflow_names: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'workflow-names', 'style': 'form', 'explode': True }})
    r"""The names of workflows to include in workflow-level metrics."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageDataDefaultApplicationJSON:
    r"""Error response."""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectDataMetrics:
    r"""Metrics aggregated across all workflows and branches for a project."""
    
    success_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success_rate') }})
    throughput: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('throughput') }})
    r"""The average number of runs per day."""
    total_credits_used: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_credits_used') }})
    r"""The total credits consumed over the current timeseries interval."""
    total_duration_secs: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_duration_secs') }})
    r"""Total duration, in seconds."""
    total_runs: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_runs') }})
    r"""The total number of runs."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends:
    r"""Metric trends aggregated across all workflows and branches for a project."""
    
    success_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success_rate') }})
    r"""The trend value for the success rate."""
    throughput: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('throughput') }})
    r"""Trend value for the average number of runs per day."""
    total_credits_used: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_credits_used') }})
    r"""The trend value for total credits consumed."""
    total_duration_secs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_duration_secs') }})
    r"""Trend value for total duration."""
    total_runs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_runs') }})
    r"""The trend value for total number of runs."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectData:
    r"""Metrics and trends data aggregated for a given project."""
    
    metrics: GetProjectWorkflowsPageData200ApplicationJSONProjectDataMetrics = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics') }})
    r"""Metrics aggregated across all workflows and branches for a project."""
    trends: GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trends') }})
    r"""Metric trends aggregated across all workflows and branches for a project."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataMetrics:
    r"""Metrics aggregated across a workflow or branchfor a project."""
    
    p95_duration_secs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p95_duration_secs') }})
    r"""The 95th percentile duration among a group of workflow runs."""
    success_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success_rate') }})
    total_credits_used: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_credits_used') }})
    r"""The total credits consumed over the current timeseries interval."""
    total_runs: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_runs') }})
    r"""The total number of runs."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataTrends:
    r"""Trends aggregated across a workflow or branch for a project."""
    
    p95_duration_secs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p95_duration_secs') }})
    r"""The 95th percentile duration among a group of workflow runs."""
    success_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success_rate') }})
    r"""The trend value for the success rate."""
    total_credits_used: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_credits_used') }})
    r"""The trend value for total credits consumed."""
    total_runs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_runs') }})
    r"""The trend value for total number of runs."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchData:
    
    branch: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branch') }})
    r"""The VCS branch of a workflow's trigger."""
    metrics: GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataMetrics = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics') }})
    r"""Metrics aggregated across a workflow or branchfor a project."""
    trends: GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchDataTrends = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trends') }})
    r"""Trends aggregated across a workflow or branch for a project."""
    workflow_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflow_name') }})
    r"""The name of the workflow."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataMetrics:
    r"""Metrics aggregated across a workflow or branchfor a project."""
    
    p95_duration_secs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p95_duration_secs') }})
    r"""The 95th percentile duration among a group of workflow runs."""
    success_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success_rate') }})
    total_credits_used: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_credits_used') }})
    r"""The total credits consumed over the current timeseries interval."""
    total_runs: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_runs') }})
    r"""The total number of runs."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataTrends:
    r"""Trends aggregated across a workflow or branch for a project."""
    
    p95_duration_secs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p95_duration_secs') }})
    r"""The 95th percentile duration among a group of workflow runs."""
    success_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success_rate') }})
    r"""The trend value for the success rate."""
    total_credits_used: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_credits_used') }})
    r"""The trend value for total credits consumed."""
    total_runs: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_runs') }})
    r"""The trend value for total number of runs."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowData:
    
    metrics: GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataMetrics = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics') }})
    r"""Metrics aggregated across a workflow or branchfor a project."""
    trends: GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowDataTrends = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trends') }})
    r"""Trends aggregated across a workflow or branch for a project."""
    workflow_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflow_name') }})
    r"""The name of the workflow."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProjectWorkflowsPageData200ApplicationJSON:
    r"""Aggregated summary metrics and trends by workflow and branches"""
    
    all_branches: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('all_branches'), 'exclude': lambda f: f is None }})
    r"""A list of all the branches for a given project."""
    all_workflows: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('all_workflows'), 'exclude': lambda f: f is None }})
    r"""A list of all the workflows for a given project."""
    org_id: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('org_id'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the organization"""
    project_data: Optional[GetProjectWorkflowsPageData200ApplicationJSONProjectData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project_data'), 'exclude': lambda f: f is None }})
    r"""Metrics and trends data aggregated for a given project."""
    project_id: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project_id'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the project"""
    project_workflow_branch_data: Optional[list[GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project_workflow_branch_data'), 'exclude': lambda f: f is None }})
    r"""A list of metrics and trends data for branches for a given project."""
    project_workflow_data: Optional[list[GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project_workflow_data'), 'exclude': lambda f: f is None }})
    r"""A list of metrics and trends data for workflows for a given project."""
    

@dataclasses.dataclass
class GetProjectWorkflowsPageDataResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    get_project_workflows_page_data_200_application_json_object: Optional[GetProjectWorkflowsPageData200ApplicationJSON] = dataclasses.field(default=None)
    r"""Aggregated summary metrics and trends by workflow and branches"""
    get_project_workflows_page_data_default_application_json_object: Optional[GetProjectWorkflowsPageDataDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error response."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    