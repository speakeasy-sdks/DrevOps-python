"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetTestsRequest:
    
    job_number: Any = dataclasses.field(metadata={'path_param': { 'field_name': 'job-number', 'style': 'simple', 'explode': False }})
    r"""The number of the job."""
    project_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project-slug', 'style': 'simple', 'explode': False }})
    r"""Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped."""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTestsDefaultApplicationJSON:
    r"""Error response."""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTestsTestsResponseItems:
    
    classname: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classname') }})
    r"""The programmatic location of the test."""
    file: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file') }})
    r"""The file in which the test is defined."""
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""The failure message associated with the test."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the test."""
    result: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result') }})
    r"""Indication of whether the test succeeded."""
    run_time: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('run_time') }})
    r"""The time it took to run the test in seconds"""
    source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    r"""The program that generated the test results"""
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTestsTestsResponse:
    r"""A paginated list of test results."""
    
    items: list[GetTestsTestsResponseItems] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items') }})
    next_page_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token') }})
    r"""A token to pass as a `page-token` query parameter to return the next page of results."""
    

@dataclasses.dataclass
class GetTestsResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    get_tests_default_application_json_object: Optional[GetTestsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error response."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    tests_response: Optional[GetTestsTestsResponse] = dataclasses.field(default=None)
    r"""A paginated list of test results."""
    